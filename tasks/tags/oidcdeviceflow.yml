- name: Configurable | OIDCDeviceFlow | dependency | oidc
  include: oidc.yml
  when: "'oidc' not in configurables"

- name: Configurable | OIDCDeviceFlow | Download | Plugin v{{ shibbolethidp_oidcdeviceflow_version }}
  unarchive:
    extra_opts: ['--strip-components=1']
    src: "{{ shibbolethidp_oidcdeviceflow_location }}/releases/download/v{{ shibbolethidp_oidcdeviceflow_version }}/idp-oauth2-deviceflow-extension-distribution-{{ shibbolethidp_oidcdeviceflow_version | regex_replace('[^0-9.]', '') }}-bin.tar.gz"
    remote_src: yes
    dest: "{{ shibbolethidp_idp_home }}"
    creates: "{{ shibbolethidp_idp_home }}/edit-webapp/WEB-INF/lib/idp-oauth2-deviceflow-extension-api-{{ shibbolethidp_oidcdeviceflow_version | regex_replace('[^0-9.]', '') }}.jar"
  notify: reown shibboleth-idp

- name: Configurable | OIDCDeviceFlow | Detect | Duplicate | Plugins
  find:
    paths: "{{ shibbolethidp_idp_home }}/edit-webapp/WEB-INF/lib"
    patterns: "^(?!.*({{ shibbolethidp_oidcdeviceflow_version | regex_replace('[^0-9.]', '') }})).*idp-oauth2-deviceflow-extension"
    use_regex: true
  register: files_to_delete

- name: Configurable | OIDCDeviceFlow | Delete | Older | Plugins
  file:
    path: "{{ shibbolethidp_item.path }}"
    state: absent
  with_items: "{{ files_to_delete.files }}"
  loop_control:
    loop_var: shibbolethidp_item

#- name: Shibboleth IdP | OIDC | Import OIDC extension configuration files
# =======================================================================

- name: Configurable | OIDCDeviceFlow | Configure | oidc-relying-party.xml
  blockinfile:
    dest: "{{ shibbolethidp_idp_home }}/conf/oidc-relying-party.xml"
    marker: "    <!-- {mark} ansible managed - OIDC DeviceFlow extension relying party definitions -->"
    insertafter: "default-destroy-method"
    content: |2
          <import resource="oauth2-deviceflow-relying-party.xml" />

- name: Configurable | OIDCDeviceFlow | Configure | oidc-relying-party.xml
  blockinfile:
    dest: "{{ shibbolethidp_idp_home }}/conf/oidc-relying-party.xml"
    marker: "        <!-- {mark} ansible managed - OIDC DeviceFlow profileresponde relying party definitions -->"
    insertbefore: "</util:map>"
    content: |2
              <entry key-ref="OAUTH2.Device" value="#{getObject('issuer')}" />

- name: Configurable | OIDCDeviceFlow | Configure | idp.properties | (to include idp-oauth2-deviceflow.properties) 
  lineinfile:
    dest: "{{ shibbolethidp_idp_home }}/conf/idp.properties"
    regexp: ^(?!.*idp-oauth2-deviceflow)(idp.additionalProperties.*)$
    line: '\1, /conf/idp-oauth2-deviceflow.properties'
    backrefs: yes

- name: Configurable | OIDCDeviceFlow | idp-oauth2-deviceflow.properties
  lineinfile: dest={{ shibbolethidp_idp_home }}/conf/idp-oauth2-deviceflow.properties regexp="^#?\s*({{ shibbolethidp_item.option }}\s*=)" backrefs=yes  line="\\1 {{ shibbolethidp_item.value }}"
  with_items:
    - { option: 'idp.oauth2.deviceflow.userCode.defaultLength', value: "16", state: present }
  loop_control:
    loop_var: shibbolethidp_item


# - name: Prepare for first relying party
# =======================================
- name: Configurable | OIDCDeviceFlow | Configure | relying-party.xml
  blockinfile:
    dest: "{{ shibbolethidp_idp_home }}/conf/relying-party.xml"
    marker: "                <!-- {mark} ansible managed - OIDC DeviceFlow profile configuration  -->"
    insertafter: "OAUTH2.Revocation"
    content: |2
                      <bean parent="OAUTH2.Device"/>

- name: Configurable | OIDCDeviceFlow | dependency | oidcupdaterps
  include: shibbolethidp_oidcupdaterps.yml

